name: Example Workflow

on:
  workflow_dispatch:
    inputs:
      blue-green-exists:
        description: 'Indicates if both blue and green environments exist'
        required: true
        type: boolean
      env_pair:
        description: 'Comma-separated environment variable pairs, e.g., dev=blue,dev=green'
        required: true

jobs:
  check-envs:
    runs-on: ubuntu-latest
    env:
      BLUE_GREEN_EXISTS: ${{ github.event.inputs.blue-green-exists }}
      ENV_PAIR: ${{ github.event.inputs.env_pair }}

    steps:
      - name: Set default env_pair if blue-green exists
        id: set-env-pair
        run: |
          if [[ "${BLUE_GREEN_EXISTS}" == "true" ]]; then
            echo "env_pair=dev=blue,dev=green" >> $GITHUB_OUTPUT
          else
            echo "env_pair=${ENV_PAIR}" >> $GITHUB_OUTPUT

  run-workflow:
    runs-on: ubuntu-latest
    needs: check-envs
    env:
      ENV_PAIR: ${{ steps.set-env-pair.outputs.env_pair }}
      domain: xyz.com
      rg: new
      container: hello

    steps:
      - name: Parse and set environment variables
        id: set-env
        run: |
          IFS=',' read -ra PAIRS <<< "${ENV_PAIR}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "$env_name=$env_value" >> $GITHUB_ENV
          done

      - name: Print environment variables
        run: |
          IFS=',' read -ra PAIRS <<< "${ENV_PAIR}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "Environment variable $env_name is ${!env_name}"
          done

      - name: Set dynamic environment variables
        run: |
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "domain=${env_name}-${env_value}.${domain}" >> $GITHUB_ENV
            echo "rg=${env_name}-${env_value}.${rg}" >> $GITHUB_ENV
          done

      - name: Run tasks based on environments
        run: |
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            if [[ "$env_name" == "dev" ]]; then
              echo "Running task for dev environment: $env_value"
              # Add steps to run for each environment
            fi
          done


# name: Example Workflow

# on:
#   workflow_dispatch:
#     inputs: 
#       env_pair: 
#         description: 'Environment variable and value, formatted as key=value' 
#         required: true 
#         default: 'dev=blue'
#   # schedule:
#   #   - cron: '*/2 * * * *'

# jobs:
#   job-a:
#     runs-on: ubuntu-latest
#     env:
#       domain: xyz.com
#       rg: new
#       container: hello

#     steps:
#       - name: Parse and set environment variable
#         id: set-env
#         run: |
#           IFS="=" read -r env_name env_value <<< "${{ github.event.inputs.env_pair }}"
#           echo "env_name=$env_name" >> $GITHUB_OUTPUT 
#           echo "env_value=$env_value" >> $GITHUB_OUTPUT
#           echo "$env_name=$env_value" >> $GITHUB_ENV

#       - name: Print environment variable
#         run: |
#           echo "Environment variable ${{ steps.set-env.outputs.env_name }} is ${{ steps.set-env.outputs.env_value }}"

#       - name: Set environment variables in GitHub Environment
#         run: |
#           echo "domain=${{ steps.set-env.outputs.env_name }}-${{ steps.set-env.outputs.env_value }}.${{ env.domain }}" >> $GITHUB_ENV
#           echo "rg=${{ steps.set-env.outputs.env_name }}-${{ steps.set-env.outputs.env_value }}.${{ env.rg }}" >> $GITHUB_ENV

#       - name: Run task
#         if: ${{ steps.set-env.outputs.env_name }} == 'dev'
#         run: echo "Running task for dev environment"

#   job-b:
#     runs-on: ubuntu-latest
#     needs: job-a
#     if: github.event_name == 'workflow_dispatch' && (github.event.inputs.env_pair == 'prod=blue' || github.event.inputs.env_pair == 'prod=green')

#     steps:
#       - name: Triggered by workflow_dispatch and env is prod
#         run: echo "This job is only triggered by workflow_dispatch and if the environment is prod"
