name: Example Workflow

on:
  workflow_dispatch:
    inputs:
      blue-green-exists:
        description: 'Indicates if both blue and green environments exist'
        required: true
        type: boolean
      env_pair:
        description: 'Comma-separated environment variable pairs, e.g., dev=blue'
        required: false

jobs:
  set-default-env-pair:
    runs-on: ubuntu-latest
    outputs:
      env_pair: ${{ steps.set-default-env-pair.outputs.env_pair }}
    steps:
      - name: Set default env_pair if blue-green exists
        id: set-default-env-pair
        run: |
          if [[ "${{ github.event.inputs.blue-green-exists }}" == "true" ]]; then
            echo "env_pair=dev=blue,dev=green" >> $GITHUB_OUTPUT
          else
            echo "env_pair=${{ github.event.inputs.env_pair }}" >> $GITHUB_OUTPUT

  run-workflow:
    runs-on: ubuntu-latest
    needs: set-default-env-pair
    env:
      ENV_PAIR: ${{ needs.set-default-env-pair.outputs.env_pair }}
      domain: xyz.com
      rg: new
      container: hello

    steps:
      - name: Parse and set environment variables
        id: set-env
        run: |
          IFS=',' read -ra PAIRS <<< "${{ env.ENV_PAIR }}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "$env_name=$env_value" >> $GITHUB_ENV
          done

      - name: Print environment variables
        run: |
          IFS=',' read -ra PAIRS <<< "${{ env.ENV_PAIR }}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "Environment variable $env_name is ${!env_name}"
          done

      - name: Set dynamic environment variables
        run: |
          IFS=',' read -ra PAIRS <<< "${{ env.ENV_PAIR }}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "domain=${env_name}-${env_value}.${domain}" >> $GITHUB_ENV
            echo "rg=${env_name}-${env_value}.${rg}" >> $GITHUB_ENV
          done

      - name: Run tasks based on environments
        run: |
          IFS=',' read -ra PAIRS <<< "${{ env.ENV_PAIR }}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "Running task for environment: $env_name=$env_value"
            # Add steps to run for each environment
          done
