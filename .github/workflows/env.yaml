name: Example Workflow

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Comma-separated environment variable pairs, e.g., dev=blue,dev=green'
        required: true
        default: 'dev=blue,dev=green'

jobs:
  run-workflow:
    runs-on: ubuntu-latest
    env:
      ENV_PAIR: ${{ github.event.inputs.env }}
      domain: xyz.com
      rg: new
      container: hello

    steps:
      - name: Parse env input and set up matrix
        id: parse-env
        run: |
          echo "Matrix=[]" > matrix.json
          IFS=',' read -ra PAIRS <<< "${{ env.ENV_PAIR }}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            echo "Matrix+=( {\"env_name\": \"$env_name\", \"env_value\": \"$env_value\"} )" >> matrix.json
          done
          matrix_json=$(jq -c . matrix.json)
          echo "matrix=${matrix_json}" >> $GITHUB_OUTPUT

      - name: Run tasks based on matrix
        run: |
          matrix=$(cat $GITHUB_OUTPUT | grep 'matrix=' | cut -d'=' -f2-)
          echo "Matrix: $matrix"
          for row in $(echo "${matrix}" | jq -c '.[]'); do
            env_name=$(echo "${row}" | jq -r '.env_name')
            env_value=$(echo "${row}" | jq -r '.env_value')
            echo "Running task for environment: $env_name=$env_value"
            # Add steps to run for each environment
            echo "domain=${env_name}-${env_value}.${domain}" >> $GITHUB_ENV
            echo "rg=${env_name}-${env_value}.${rg}" >> $GITHUB_ENV
          done

      - name: Print environment variables
        run: |
          echo "Environment variables:"
          printenv | grep -E 'domain|rg'
