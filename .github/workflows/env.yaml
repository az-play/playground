name: Example Workflow

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Comma-separated environment variable pairs, e.g., dev=blue,dev=green'
        required: true
        default: 'dev=blue,dev=green'

jobs:
  parse-env:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Parse env input
        id: parse-env
        run: |
          echo '[]' > matrix.json
          IFS=',' read -ra PAIRS <<< "${{ github.event.inputs.env }}"
          for pair in "${PAIRS[@]}"; do
            IFS="=" read -r env_name env_value <<< "$pair"
            jq --arg env_name "$env_name" --arg env_value "$env_value" '. += [{"env_name": $env_name, "env_value": $env_value}]' matrix.json > tmp.json && mv tmp.json matrix.json
          done
          cat matrix.json
          matrix_json=$(cat matrix.json | jq -c .)
          echo "matrix=$matrix_json" >> $GITHUB_OUTPUT

  run-workflow:
    runs-on: ubuntu-latest
    needs: parse-env
    strategy:
      matrix: ${{ fromJson(needs.parse-env.outputs.matrix) }}

    steps:
      - name: Run job for each environment
        run: |
          echo "We are running for each dev: ${{ matrix.env_name }}=${{ matrix.env_value }}"
          echo "domain=${{ matrix.env_name }}-${{ matrix.env_value }}.${{ env.domain }}" >> $GITHUB_ENV
          echo "rg=${{ matrix.env_name }}-${{ matrix.env_value }}.${{ env.rg }}" >> $GITHUB_ENV

      - name: Print environment variables
        run: |
          echo "Environment variables:"
          printenv | grep -E 'domain|rg'
