name: Run Azure CLI Login with OpenID Connect
on:
  workflow_dispatch: 
    inputs: 
      is-blue: 
        description: 'blue-deployment' 
        required: true
        type: boolean
        default: true 

permissions:
  id-token: write 
      
jobs: 
  test:
    runs-on: ubuntu-latest
    env:
      default-env: "blue"
      default-domain:  "xyz.com"
      RG: "hello"
      RP: "HI"
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set domain based on env 
      run: | 
        if [ "${{ github.event.inputs.is-blue }}" = true ]; then 
          echo "env=${{ env.default-env }}" >> $GITHUB_ENV 
          echo "domain=${{ env.default-domain }}" >> $GITHUB_ENV
        else 
          echo "default-env=green" >> $GITHUB_ENV 
          echo "default-domain=abc.com" >> $GITHUB_ENV
        fi
    
    - name: Print vars 
      run: |
        echo "env is : ${{ env.default-env }}" 
        echo "domain is : ${{env.default-domain}}"

    - name: setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: python version installed is 
      run: |
        python --version

    - name: run script
      run: |
        chmod +x "${GITHUB_WORKSPACE}/scripts/certbot/test.sh"
        "${GITHUB_WORKSPACE}/scripts/certbot/test.sh" 


#    - name: run script
#      env:
#        GITHUB_WORKSPACE: ${{ github.workspace }}
#      run: |
#        chmod +x "${GITHUB_WORKSPACE}/scripts/certbot/test.sh"
#        "${GITHUB_WORKSPACE}/scripts/certbot/test.sh" 
#
    - name: install dependencies
      run: pip install -r "${GITHUB_WORKSPACE}/scripts/requirements.txt"

    - name: certbot
      run:
        certbot --version

    - name: az cli
      run:
        az --version


#    - name: Azure CLI Login
#      uses: azure/login@v2
#      with:
#        client-id: ${{ secrets.AZURE_CLIENT_ID }}
#        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#  
#    - name: Azure CLI script
#      uses: azure/cli@v2
#      with:
#        azcliversion: latest
#        inlineScript: |
#          az account show
